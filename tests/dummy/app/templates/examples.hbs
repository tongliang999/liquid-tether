<h1>Examples</h1>

{{#scroll-spier id="hello-world" on-pass="addPassedAnchor" on-unpass="removePassedAnchor"}}
  Hello World
{{/scroll-spier}}

<p>
  Below is the basic Hello World example seen on the front page. The template
  code is embedded directly in the context of this page, hidden by an
  <code>if</code> statement. Toggling that <code>if</code> inserts the element
  into the DOM, which triggers the animation.
</p>

<div class="example-button-container">
  <button {{action 'toggleHello'}} id="hello-world-button" class="btn btn-primary btn-embossed">
    Hello, World!
  </button>
  {{#if showHello}}
    {{#liquid-tether
      to="hello-world"
      target="#hello-world-button"
      attachment="top middle"
      targetAttachment="bottom middle"
      class="container123"
      tetherClass="tether123"
      overlayClass="overlay123"
    }}
      <div id="hello-world-popover" class="popover bottom">
        <div class="arrow"></div>
        <div class="popover-title">
          Hello!
        </div>
      </div>
    {{/liquid-tether}}
  {{/if}}
</div>

{{#example-pane}}
  <div class="template">
    {{code-snippet name="hello-world.hbs"}}
  </div>
  <div class="js">
    {{code-snippet name="hello-world.js"}}
  </div>
  <div class="transitions">
    {{code-snippet name="hello-world-transitions.js"}}
  </div>
{{/example-pane}}

{{#scroll-spier id="animation-with-context" on-pass="addPassedAnchor" on-unpass="removePassedAnchor"}}
  Animation With Context
{{/scroll-spier}}

<p>
  This example shows different animations based on context. It uses the index
  constraint shorthands to differentiate between transitioning to the first
  modal, in between modals, and from the last modal. This way we can animate
  without losing spacial context from the perspective of the user (e.g. if a
  modal moves out toward the left side using <code>to-left</code>, the in
  reverse the modal with move in from the left side using <code>to-right</code>)
</p>

<div class="example-button-container">
  <button {{action "openModalDialog"}} id="animation-with-context-button" class="btn btn-primary btn-embossed">
    Open Dialog
  </button>
</div>

{{#if showFirstModalDialog}}
  {{#liquid-tether
    to="modal-dialog"
    index=1
    target="document.body"
    targetModifier="visible"
    attachment="middle center"
    tetherClass="modal-dialog"
    overlayClass="modal-backdrop"
    on-overlay-click="closeModalDialog"}}
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Modal Header</h4>
      </div>

      <div class="modal-body">
        <p>Here's a modal!</p>
      </div>

      <div class="modal-footer">
        <button {{action "closeModalDialog"}} class="btn btn-default btn-embossed">Cancel</button>
        <button {{action "nextModalDialog"}} class="btn btn-primary btn-embossed">Next</button>
      </div>
    </div>
  {{/liquid-tether}}
{{/if}}

{{#if showSecondModalDialog}}
  {{#liquid-tether
    to="modal-dialog"
    index=2
    target="document.body"
    targetModifier="visible"
    attachment="middle center"
    tetherClass="modal-dialog"
    overlayClass="modal-backdrop"}}
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Another Modal</h4>
      </div>

      <div class="modal-body">
        <p>
          This modal came in from the right instead of fading. The next modal
          will also slide in from the right, while the previous modal will slide
          in from the left, maintaing spacial context.
        </p>
      </div>

      <div class="modal-footer">
        <button {{action "prevModalDialog"}} class="btn btn-default btn-embossed">Back</button>
        <button {{action "nextModalDialog"}} class="btn btn-primary btn-embossed">Next</button>
      </div>
    </div>
  {{/liquid-tether}}
{{/if}}

{{#if showThirdModalDialog}}
  {{#liquid-tether
    to="modal-dialog"
    index=3
    target="document.body"
    targetModifier="visible"
    attachment="middle center"
    tetherClass="modal-dialog"
    overlayClass="modal-backdrop"}}
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Another Modal</h4>
      </div>

      <div class="modal-body">
        <p>
          This is the last modal! It'll fade out when you finish the dialog.
        </p>
      </div>

      <div class="modal-footer">
        <button {{action "prevModalDialog"}} class="btn btn-default btn-embossed">Back</button>
        <button {{action "closeModalDialog"}} class="btn btn-primary btn-embossed">Finish</button>
      </div>
    </div>
  {{/liquid-tether}}
{{/if}}

{{#example-pane}}
  <div class="template">
    {{code-snippet name="animation-with-context.hbs"}}
  </div>
  <div class="js">
    {{code-snippet name="animation-with-context.js"}}
  </div>
  <div class="transitions">
    {{code-snippet name="animation-with-context-transitions.js"}}
  </div>
{{/example-pane}}

{{#scroll-spier id="routed-tethers" on-pass="addPassedAnchor" on-unpass="removePassedAnchor"}}
  Routed Tethers
{{/scroll-spier}}

<p>
  Oftentimes modals should appear in the context of a route. If that's the case
  in your application, it's as simple as creating a route and template with just
  a <code>liquid-tether</code>.
</p>

<div class="example-button-container">
  {{#link-to "examples.step-one" class="btn btn-primary btn-embossed"}}
    Open Routed Modal
  {{/link-to}}
</div>

{{outlet}}

{{#example-pane}}
  <div class="template">
    {{code-snippet name="routed-modal.hbs"}}
  </div>
{{/example-pane}}

{{#scroll-spier id="moving-modals" on-pass="addPassedAnchor" on-unpass="removePassedAnchor"}}
  Moving Modals
{{/scroll-spier}}

<p>
  All of the standard Liquid Fire animations work with Liquid Tether out of the
  box, meaning the <code>fly-to</code> animation can be used to animate tethers
  around the page!
</p>

<div class="example-button-container">
  <button {{action "openFlytoDialog"}} id="moving-modals" class="btn btn-primary btn-embossed">Open Moving Modal</button>
</div>

{{#if showFirstFlytoDialog}}
  {{#liquid-tether
    to="flyto-dialog"
    index=1
    target="document.body"
    targetModifier="visible"
    attachment="top left"
    targetAttachment="top left"
    offset="-20px -20px"
    tetherClass="modal-dialog"
    overlayClass="modal-backdrop"}}
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Modal Header</h4>
      </div>

      <div class="modal-body">
        <p>Here's a modal!</p>
      </div>

      <div class="modal-footer">
        <button {{action "closeFlytoDialog"}} class="btn btn-default btn-embossed">Cancel</button>
        <button {{action "nextFlytoDialog"}} class="btn btn-primary btn-embossed">Next</button>
      </div>
    </div>
  {{/liquid-tether}}
{{/if}}

{{#if showSecondFlytoDialog}}
  {{#liquid-tether
    to="flyto-dialog"
    index=2
    target="document.body"
    targetModifier="visible"
    attachment="top right"
    targetAttachment="top right"
    offset="-20px 40px"
    tetherClass="modal-dialog"
    overlayClass="modal-backdrop"}}
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Another Modal</h4>
      </div>

      <div class="modal-body">
        <p>
          This modal came in from the right instead of fading. The next modal
          will also slide in from the right, while the previous modal will slide
          in from the left, maintaing spacial context.
        </p>
      </div>

      <div class="modal-footer">
        <button {{action "prevFlytoDialog"}} class="btn btn-default btn-embossed">Back</button>
        <button {{action "nextFlytoDialog"}} class="btn btn-primary btn-embossed">Next</button>
      </div>
    </div>
  {{/liquid-tether}}
{{/if}}

{{#if showThirdFlytoDialog}}
  {{#liquid-tether
    to="flyto-dialog"
    index=3
    target="document.body"
    targetModifier="visible"
    attachment="bottom center"
    targetAttachment="bottom center"
    offset="20px 0"
    tetherClass="modal-dialog"
    overlayClass="modal-backdrop"}}
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Another Modal</h4>
      </div>

      <div class="modal-body">
        <p>
          This is the last modal! It'll fade out when you finish the dialog.
        </p>
      </div>

      <div class="modal-footer">
        <button {{action "prevFlytoDialog"}} class="btn btn-default btn-embossed">Back</button>
        <button {{action "closeFlytoDialog"}} class="btn btn-primary btn-embossed">Finish</button>
      </div>
    </div>
  {{/liquid-tether}}
{{/if}}

{{#example-pane}}
  <div class="template">
    {{code-snippet name="flyto-dialog.hbs"}}
  </div>
  <div class="js">
    {{code-snippet name="flyto-dialog.js"}}
  </div>
  <div class="transitions">
    {{code-snippet name="flyto-dialog-transitions.js"}}
  </div>
{{/example-pane}}

{{#scroll-spier id="liquid-wormhole" on-pass="addPassedAnchor" on-unpass="removePassedAnchor"}}
  Liquid Wormhole
{{/scroll-spier}}

<p>
  There are times when you may want to warp an element up to the body, but
  without the positioning power of Tether (for instance if you simply want to
  position the element using <code>position: fixed;</code>). In those cases, you
  can use the <code>\{{liquid-wormhole}}</code> helper.
</p>

<p>
  Liquid Wormhole works just like Liquid Tether, but without a default
  overlay/tether element. To animate the elements warped by a liquid wormhole,
  use the <code>explode</code> animation helper.
</p>

<p>
  Liquid Wormhole is a dependency of Liquid Tether. You can include it directly
  if you do not need the positioning provided by Tether.js. See the
  <a href="https://github.com/pzuraq/liquid-wormhole">addon's repository</a> for
  more details.
</p>

<div class="example-button-container">
  <button {{action "toggleFlyout"}} id="flyout" class="btn btn-primary btn-embossed">Open Flyout</button>
</div>

{{#if showFlyout}}
  {{#liquid-wormhole to="flyout" index=1}}
    <div class="modal-backdrop"></div>
    <div class="flyout">
      <h1>Hey there!</h1>
      <h2>This is a flyout!</h2>

      <p>
        It's been given a fixed position relative to the window, without any of
        the conceptual overhead that comes with tethering.
      </p>

      <div class="fixed-to-bottom">
        This div is easily fixed to the bottom of the screen, no need to worry about
        the target container messing with your positioning!

        <button {{action 'toggleFlyout'}} class="btn btn-primary btn-embossed btn-block">
          Close
        </button>
      </div>
    </div>
  {{/liquid-wormhole}}
{{/if}}

{{#example-pane}}
  <div class="template">
    {{code-snippet name="liquid-wormhole.hbs"}}
  </div>
  <div class="js">
    {{code-snippet name="liquid-wormhole.js"}}
  </div>
  <div class="transitions">
    {{code-snippet name="liquid-wormhole-transitions.js"}}
  </div>
{{/example-pane}}
